plotTrainingMixtureRatios <- function(mix_ratios = tibble(mix_ratio = rbeta(1000000, 1, 5) + 0.10)){
  
  gg_mix_ratio_dist <-  
    mix_ratios |> 
      ggplot(aes(x = mix_ratio)) + 
        geom_density() + 
        labs(title = "Distribution of Mixture Ratios for Simulated Training", x = "Simulated Mixture Ratio", y = "Relative Frequency")
  
  
}
getCrossValPrecisionRecall <- function(wf_tuned = tar_read(wf_tuned_current_prior_post_with_rates_0.5_lgb), prevalence = 0.5, feature_set = "current_prior_post_with_rates", model = "lgb"){
  
  preds <- wf_tuned |> collect_predictions()
  
  best_config <- wf_tuned |> select_best(metric = "pr_auc")
  
  preds_best <- preds |> filter(.config == best_config$.config)
  
  pr_data <- 
    preds_best |> 
      pr_curve(.pred_1, truth = target, event_level = "second") |>
      mutate(prevalence = prevalence, 
             feature_set = feature_set,
             model = model, 
             tag = paste0(feature_set, "_",  prevalence, "_", model))

  pr_data
  
}

getCrossValROC <- function(wf_tuned = tar_read(wf_tuned_current_prior_post_with_rates_0.5_lgb), prevalence = 0.5, feature_set = "current_prior_post_with_rates", model = "lgb"){
  
  preds <- wf_tuned |> collect_predictions()
  
  best_config <- wf_tuned |> select_best(metric = "pr_auc")
  
  preds_best <- preds |> filter(.config == best_config$.config)
  
  roc_data <- 
    preds_best |> 
    roc_curve(.pred_1, truth = target, event_level = "second") |>
    mutate(prevalence = prevalence, 
           feature_set = feature_set,
           model = model, 
           tag = paste0(feature_set, "_",  prevalence, "_", model))
  
  roc_data
  
}

getCrossValMetrics <- function(wf_tuned = tar_read(wf_tuned_current_prior_post_with_rates_0.5_lgb), prevalence = 0.5, feature_set = "current_prior_post_with_rates", model = "lgb", threshold = 0.75){
  
  best_config <- wf_tuned |> select_best(metric = "pr_auc")
  
  cv_preds <- 
    wf_tuned |> 
      collect_predictions() |> 
      filter(.config == best_config$.config) |>
      mutate(.pred_class = factor(if_else(.pred_1 > threshold, 1, 0)))

  metrics_best <- 
    bind_rows(cv_preds |> class_metrics(estimate = .pred_class, truth = target, event_level = "second"), cv_preds |> continuous_metrics(.pred_1, truth = target, event_level = "second")) |>
    transmute(Metric = .metric, Value = .estimate, prevalence = prevalence, feature_set = feature_set, model = model, tag = paste0(feature_set, "_",  prevalence, "_", model))
  
  metric_labels <- tibble(Metric = c("roc_auc", "pr_auc", "mcc", "sens", "spec"), Label = c("auROC", "auPR", "MCC", "Sens", "Spec"))
  
  metric_table <- 
    metric_labels |> 
    left_join(metrics_best) |> 
    drop_na() |>
    transmute(Label, Value = round(Value, 2))
  
  metric_table
  
}

getCrossValDistributions <- function(wf_tuned = tar_read(wf_tuned_current_prior_post_with_rates_0.5_lgb), prevalence = 0.5, feature_set = "current_prior_post_with_rates", model = "lgb"){
  
  preds <- wf_tuned |> collect_predictions()
  
  best_config <- wf_tuned |> select_best(metric = "pr_auc")
  
  preds_best <- preds |> filter(.config == best_config$.config)
  
  gg_dist <- 
    preds_best |>
      ggplot(aes(.pred_1, after_stat(scaled), fill = target, color = target)) +
        geom_density(alpha = 0.5, bounds = c(0, 1), adjust = 1.5) +
        labs(title = paste0(feature_set, "_",  prevalence, "_", model))
  ggsave(paste0("../figures/cross_validation/probability_distribution_cross_val_", feature_set, "_",  prevalence, "_", model, ".png"), gg_dist, width = 8, height = 4, dpi = 300, bg = "white")
  ggsave(paste0("../figures/cross_validation/probability_distribution_cross_val_", feature_set, "_",  prevalence, "_", model, ".svg"), gg_dist, width = 8, height = 4, dpi = 300)
  
  return(NULL)
  
}

plotCrossValPerformanceSummary <- function(cv_pr_curve_data = tar_read(cv_pr_curve_data_current_prior_post_with_rates_0.5_lgb), cv_roc_curve_data = tar_read(cv_roc_curve_data_current_prior_post_with_rates_0.5_lgb), cv_metrics = tar_read(cv_metrics_current_prior_post_with_rates_0.5_lgb), label = ""){
  
  library(gridExtra)
  
  metric_labels <- tibble(Metric = c("roc_auc", "pr_auc", "mcc", "sens", "spec"), Label = c("auROC", "auPR", "MCC", "Sens", "Spec"))
  
  metric_table <- 
    metric_labels |> 
    left_join(cv_metrics) |> 
    drop_na() |>
    transmute(Label, Value = round(Value, 2))
  
  gg_roc <-  
    cv_roc_curve_data |> 
      ggplot(aes(1 - specificity, sensitivity)) +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed", alpha = 0.25) + 
        geom_step() + 
        coord_equal() + 
        labs(title = "ROC Curve", x = "1 - Specificity", y = "Sensitivity") +
        annotation_custom(tableGrob(metric_table, theme = ttheme_minimal(hjust = 1, core = list(fg_params=list(hjust=1, x=1))), cols = NULL, rows = NULL), xmin = 0.6, xmax = 0.9, ymin = 0.1, ymax = 0.4)
    
  gg_pr <-  
    cv_pr_curve_data |> 
      bind_rows(tibble_row(.threshold = 0, recall = 1, precision = 0, prevalence = 0.5, feature_set = "", model = "", tag = "")) |> 
      ggplot(aes(recall, precision)) +
      geom_path() + 
      coord_equal() + 
      labs(title = "PR Curve", x = "Recall", y = "Precision")

  gg_out <- ggpubr::ggarrange(plotlist = list(gg_roc, gg_pr))
  
  ggsave(paste0("../figures/cross_validation/", label, ".png"), gg_out, width = 8, height = 4, dpi = 600, bg = "white")
  ggsave(paste0("../figures/cross_validation/", label, ".svg"), gg_out, width = 8, height = 4)
  
  list(roc = cv_roc_curve_data, pr = cv_pr_curve_data, metric_table = metric_table)
  
}

makePredictionTilePlot <- function(test_preds_all = tar_read(test_preds_all)){
  
  test_preds_all |>
    filter(prevalence == 0.25 & feature_set %in% c("current", "current_prior", "current_prior_post")) |>
    mutate(tag = paste0(feature_set, "_",  prevalence),
           pred = factor(ifelse(prob > prevalence + 0.05, "Contaminated", "Not Contaminated"))) |>
    ggplot(aes(x = row_num, y = tag, fill = pred)) +
    geom_tile() +
    scico::scale_fill_scico_d(palette = "bilbao", begin = 0.1, end = 1) + 
    labs(title = "Prediction Tile Plot")
  
}

makePrePostLinePlots <- function(test_preds = tar_read(test_preds_current_prior_post_with_rates_0.5_lgb)){
  
    ggplot() +
      geom_segment(data = test_preds, aes(x = 0, xend = 1, y = -Hgb_delta_prior, yend = 0, color = .pred_1), alpha = 0.5) +
      geom_segment(data = test_preds, aes(x = 1, xend = 2, y = 0, yend = Hgb_delta_post, color = .pred_1), alpha = 0.5) +
      scico::scale_color_scico(palette = "bilbao", begin = 1, end = 0.1) +
      scale_y_continuous(name = "Hemoglobin Difference (mg/dL)", limits = c(-5, 5))
  
}

makePrePostLinePlot <- function(preds_joined = tar_read(preds_joined), utah_preds_joined = tar_read(utah_preds_joined)){
  
  gg_input <- 
    bind_rows(
      preds_joined |> mutate(source = "WashU"),
      utah_preds_joined |> mutate(source = "Utah", transfusion_before_post = !is.na(product))
    ) |> 
      mutate(label = case_when(.pred_1 > 0.9 & transfusion_before_post ~ "Contaminated w/ Transfusion", 
                               .pred_1 > 0.9 & !transfusion_before_post  ~ "Contaminated w/o Transfusion",
                               .pred_1 < 0.1 & transfusion_before_post ~ "Not Contaminated w/ Transfusion",
                               .pred_1 >= 0.1 & !transfusion_before_post ~ "Not Contaminated w/o Transfusion",
                               T ~ NA)) |>
      #filter(!blood_order_reason %in% c("Sickle cell/Congenital anemia", "Sickle cell disease complications", "Intra-op transfusion", "Active bleeding, Hgb <8 g/dL", "Hemorrhagic shock/Life-threatening bleeding")) |> 
      drop_na(label) |> 
      arrange(desc(Hgb_post - Hgb_prior))
  
  gg_input_sampled <- 
      bind_rows(gg_input |> filter(label != "Not Contaminated"), gg_input |> filter(label == "Not Contaminated") |> slice_sample(n = 1000)) |> 
        group_by(label) |> 
        slice_sample(n = 250) |> 
        mutate(row_num = as.factor(row_number())) |>
        select(row_num, label, Hct:WBC, Hgb_prior:Plt_prior, Hgb_post:Plt_post) |> 
        # Pivot longer where a time_point column and a task assay column are created
        pivot_longer(cols = -c("row_num", "label"), names_to = c("task_assay", "time_point"), names_sep = "_") |> 
        mutate(time_point = case_when(time_point == "prior" ~ 0, is.na(time_point) ~ 1, time_point == "post" ~ 2))
  
  gg_transfused_hg_line_plot <- 
    gg_input_sampled |> 
      filter(task_assay == "Hgb") |> 
      ggplot(aes(x = time_point, y = value, color = row_num)) +
      geom_line(alpha = 0.1, lineend = "round") + 
      geom_point(alpha = 0.25, shape = 20, stroke = 0, size = 2) + 
      geom_boxplot(aes(group = time_point, fill = label), alpha = 0.6, color = "black", width = 0.75, outliers = F) +
      facet_wrap(~ label) +
      scale_x_continuous(name = "Time Point", breaks = c(0, 1, 2), labels = c("Prior", "Current", "Post")) +
      scale_y_continuous(name = "Hemoglobin (g/dL)", limits = c(4, 12), breaks = seq(4, 12, by = 1)) +
      labs(title = "Anomaly-with-Resolution Patterns in Contaminated Hemoglobins") + 
      scico::scale_color_scico_d(palette = "grayC", begin = 0.2, end = 0.9) +
      scico::scale_fill_scico_d(palette = "bilbao", begin = 0.2, end = 0.9) +
      theme(legend.position = "none")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_hemoglobin.png", gg_transfused_hg_line_plot, width = 8, height = 4, dpi = 600, bg = "white")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_hemoglobin.svg", gg_transfused_hg_line_plot, width = 8, height = 4)

  gg_transfused_hct_line_plot <- 
    gg_input_sampled |> 
      filter(task_assay == "Hct") |> 
      ggplot(aes(x = time_point, y = value, color = row_num)) +
      geom_line(alpha = 0.1, lineend = "round") + 
      geom_point(alpha = 0.25, shape = 20, stroke = 0, size = 2) + 
      geom_boxplot(aes(group = time_point, fill = label), alpha = 0.6, color = "black", width = 0.75, outliers = F) +
      facet_wrap(~ label) +
      scale_x_continuous(name = "Time Point", breaks = c(0, 1, 2), labels = c("Prior", "Current", "Post")) +
      scale_y_continuous(name = "Hematocrit (%)", limits = c(10, 50), breaks = seq(10, 50, by = 5)) +
#      labs(title = "Hemoglobin Changes in Contaminated and Post-Transfusion Samples") + 
      scico::scale_color_scico_d(palette = "grayC", begin = 0.2, end = 0.9) +
      scico::scale_fill_scico_d(palette = "bilbao", begin = 0.2, end = 0.9) +
      theme(legend.position = "none")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_hematocrit.png", gg_transfused_hct_line_plot, width = 8, height = 4, dpi = 600, bg = "white")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_hematocrit.svg", gg_transfused_hct_line_plot, width = 8, height = 4)

  gg_transfused_plt_line_plot <- 
    gg_input_sampled |> 
    filter(task_assay == "Plt") |> 
      ggplot(aes(x = time_point, y = value, color = row_num)) +
        geom_line(alpha = 0.1, lineend = "round") + 
        geom_point(alpha = 0.25, shape = 20, stroke = 0, size = 2) + 
        geom_boxplot(aes(group = time_point, fill = label), alpha = 0.6, color = "black", width = 0.75, outliers = F) +
        facet_wrap(~ label) +
        scale_x_continuous(name = "Time Point", breaks = c(0, 1, 2), labels = c("Prior", "Current", "Post")) +
        scale_y_continuous(name = "Platelets (k/cumm)", limits = c(0, 600), breaks = seq(0, 600, by = 100)) +
        #      labs(title = "Hemoglobin Changes in Contaminated and Post-Transfusion Samples") + 
        scico::scale_color_scico_d(palette = "grayC", begin = 0.2, end = 0.9) +
        scico::scale_fill_scico_d(palette = "bilbao", begin = 0.2, end = 0.9) +
        theme(legend.position = "none")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_platelet.png", gg_transfused_plt_line_plot, width = 8, height = 4, dpi = 600, bg = "white")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_platelet.svg", gg_transfused_plt_line_plot, width = 8, height = 4)
  
  gg_transfused_wbc_line_plot <- 
    gg_input_sampled |> 
    filter(task_assay == "WBC") |> 
      ggplot(aes(x = time_point, y = value, color = row_num)) +
      geom_line(alpha = 0.1, lineend = "round") + 
      geom_point(alpha = 0.25, shape = 20, stroke = 0, size = 2) + 
      geom_boxplot(aes(group = time_point, fill = label), alpha = 0.6, color = "black", width = 0.75, outliers = F) +
      facet_wrap(~ label) +
      scale_x_continuous(name = "Time Point", breaks = c(0, 1, 2), labels = c("Prior", "Current", "Post")) +
      scale_y_continuous(name = "WBC (k/cumm)", limits = c(0, 30), breaks = seq(0, 30, by = 10)) +
    #      labs(title = "Hemoglobin Changes in Contaminated and Post-Transfusion Samples") + 
    scico::scale_color_scico_d(palette = "grayC", begin = 0.2, end = 0.9) +
    scico::scale_fill_scico_d(palette = "bilbao", begin = 0.2, end = 0.9) +
    theme(legend.position = "none")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_wbc.png", gg_transfused_wbc_line_plot, width = 8, height = 4, dpi = 600, bg = "white")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_wbc.svg", gg_transfused_wbc_line_plot, width = 8, height = 4)
  
  library(ggpubr)
  
  gg_pre_post_lines_all <- 
    ggarrange(plotlist = list(gg_transfused_hg_line_plot + theme(axis.title.x.bottom = element_blank(), axis.text.x.bottom = element_blank(), axis.line.x.bottom = element_blank()), 
                                    gg_transfused_plt_line_plot + theme(axis.title.x.bottom = element_blank(), strip.text.x.top = element_blank(), axis.text.x.bottom = element_blank(), axis.line.x.bottom = element_blank())), 
                    nrow = 2, align = "v") |> 
    annotate_figure(top = text_grob("CBC Changes in Contaminated and Post-Transfusion Samples", face = "bold.italic", size = 16, hjust = 0.55))
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_all.png", gg_pre_post_lines_all, width = 8.5, height = 11, dpi = 600, bg = "white")
  ggsave("../figures/pre_post/pre_post_transfused_line_plot_all.svg", gg_pre_post_lines_all, width = 8.5, height = 11)
  
  
  gg_input |> 
    filter(.pred_1 > 0.75 & blood_order_reason %in% c(NA, "Hgb <7 g/dL", "BMT, Hgb <8 g/dL")) |> 
    ggplot(aes(x = Hgb_prior, y = Hgb_post, color = transfusion_before_post)) +
      geom_abline(intercept = 0, slope = 1, linetype = "dashed") + 
      geom_point(size = 2, shape = 20, alpha = 0.5) + 
      ggpmisc::stat_poly_line() + 
      scale_x_continuous(limits = c(4, 12)) + 
      scale_y_continuous(limits = c(4, 12)) + 
      scico::scale_color_scico_d(palette = "bilbao", begin = 0.9, end = 0.1) +
      theme(legend.position = c(0.1, 0.9))
  
}

makePrePostTilePlots <- function(test_preds = tar_read(test_preds_current_prior_post_with_rates_0.5_lgb)){
  
  gg_input <- 
    test_preds |> mutate(label = case_when(.pred_1 > 0.9 ~ "Contaminated", .pred_1 < 0.1 ~ "Not Contaminated", between(.pred_1, 0.1, 0.9) ~ "Equivocal")) |> 
   group_by(label) |> slice_sample(n = 1000) |> arrange(desc(Hgb_delta_prior)) |> mutate(row_id = row_number())
  
  gg_pre_post_tile <- 
    gg_input |>
    ggplot() +
      geom_rect(aes(ymin = row_id, ymax = row_id + 1, xmin = 0, xmax = 1, fill = Hgb_delta_prior)) +
      geom_rect(aes(ymin = row_id, ymax = row_id + 1, xmin = 1, xmax = 2, fill = Hgb_delta_post)) +
      facet_wrap(~label) +
      guides(fill = guide_colorbar(title = "ΔHg", barwidth = 1, barheight = 5, title.position = "top", title.hjust = 0, ticks.colour = NA)) +
      scico::scale_fill_scico(palette = "vik", begin = 0, end = 1, limits = c(-5, 5), breaks = c(-4.4, 0, 4.5), labels = c("-5", "0", "5"), oob = scales::squish) + 
      scale_x_continuous(breaks = c(0.5, 1.5), labels = c("Prior", "Post")) +
      scale_y_continuous(name = "Randomly Selected Patients", breaks = c(1, 1000), expand = c(0.01, 0.01)) +
      coord_cartesian(clip = "off") +
      labs(title = "Patterns of Hemoglobin Changes Across Prediction Classes") + 
      theme(axis.line.x.bottom = element_blank())
  ggsave("../figures/hemoglobin_pre_post_tile_plot.png", gg_pre_post_tile, width = 8, height = 5, dpi = 600, bg = "white")
  ggsave("../figures/hemoglobin_pre_post_tile_plot.svg", gg_pre_post_tile, width = 8, height = 5)
  
}

makeBloodWastePlots <- function(transfusions_joined = tar_read(transfusions_joined), preds_joined = tar_read(preds_joined), total_transfusions = nrow(tar_read(transfusion_data))){
  
  preds_distinct = preds_joined |> distinct(EPIC_MRN, DRAWN_DT_TM, .keep_all = TRUE)
  
  thresholds = c(0.5, 0.7, 0.9)
  
  contaminated_CBCs <- map(thresholds, ~preds_distinct |> filter(.pred_1 > .x) |> nrow()) |> unlist()
  unnecessary_transfusions <- map(thresholds, ~transfusions_joined |> filter(.pred_1 > .x & Hgb_post > 8) |> nrow()) |> unlist()
  
  combined <- tibble(threshold = factor(thresholds), unnecessary_transfusions = unnecessary_transfusions)
  
  combined |> 
    ggplot(aes(threshold, unnecessary_transfusions)) + 
      geom_col()

  
}

makeMixRatioScatter <- function(preds = tar_read(test_preds_current_prior_post_with_rates_0.5_lgb), mix_ratios = tar_read(test_mix_ratios)){
  
  input <- bind_cols(preds, mix_ratios)
  
  quantiles <- 
    input |> 
      mutate(.pred_1 = round(.pred_1, 2)) |>
      drop_na() |> 
      group_by(.pred_1) |>
      reframe(p05 = quantile(.pred, probs = 0.05),  p25 = quantile(.pred, probs = 0.25), p50 = quantile(.pred, probs = 0.5), p75 = quantile(.pred, probs = 0.75), p95 = quantile(.pred, probs = 0.95)) |>
      pivot_longer(cols = c(p05, p25, p50, p75, p95), names_to = "quantile", values_to = "value")
  
  gg_mix_ratio_scatter <-
    input |> 
      drop_na() |> 
      ggplot(aes(.pred_1, .pred)) +
        geom_point(shape = ".", color = "gray60") + 
        geom_smooth(data = quantiles, aes(x = .pred_1, y = value, linetype = quantile), se = F, span = 0.5, fullrange = F, color = "black") + 
        scale_linetype_manual(values = c("p05" = "dashed", "p25" = "longdash", "p50" = "solid", "p75" = "longdash", "p95" = "dashed")) +
        scale_x_continuous(name = "Predicted Contamination Probability", breaks = seq(0, 1, by = 0.25), expand = expansion(add = c(0.01, 0.01))) +
        scale_y_continuous(name = "Estimated Mixture Ratio", breaks = seq(0, 1, by = 0.1), expand = expansion(add = c(0.0, 0.01))) +
        coord_cartesian(xlim = c(0, 1), ylim = c(0, 0.5)) +
        labs(title = "Mixture Ratios Across Contamination Probabilities") + 
        theme(legend.position = "none")
  ggsave("../figures/mixture_ratio_by_contamination_probability_scatter.png", gg_mix_ratio_scatter, width = 8, height = 5, dpi = 600, bg = "white")
  ggsave("../figures/mixture_ratio_by_contamination_probability_scatter.svg", gg_mix_ratio_scatter, width = 8, height = 5)
  

  ### Use added information of the index Hgb above and below 7. 
  
}

compareTransfusionIndications <- function(transfusions_joined = tar_read(transfusions_joined)){
  
  library(gtsummary)
  
  gt_unnecessary <- 
    transfusions_joined |> 
      tbl_summary(by = isUnnecessary, include = c("blood_order_reason", "Hgb_prior", "Hgb_post", "hg_diff"), sort = all_categorical(FALSE) ~ "frequency") |> 
        add_p(test.args = all_tests("fisher.test") ~ list(simulate.p.value=TRUE)) |> 
        bold_p() |> 
        bold_labels() |>
        italicize_levels() |> 
        as_gt()
  gt::gtsave(gt_unnecessary, file = "../figures/transfusion_plots/unnecessary_transfusion_indications.html")
  gt::gtsave(gt_unnecessary, file = "../figures/transfusion_plots/unnecessary_transfusion_indications.docx")
  
  gg_indication_by_prob_ecdf <- 
    transfusions_joined |> 
      filter(!blood_order_reason %in% c("Sickle cell disease complications", "Sickle cell/Congenital anemia")) |> 
      mutate(isBleeding = ifelse(blood_order_reason %in% c("Intra-op transfusion", "Active bleeding, Hgb <8 g/dL", "Hemorrhagic shock/Life-threatening bleeding"), "Bleeding", "Non-Bleeding")) |>
      ggplot(aes(.pred_1, color = isBleeding)) + 
        stat_ecdf(linewidth = 1.2) +
        scico::scale_color_scico_d(palette = "bilbao", begin = 0.2, end = 0.8) +
        labs(title = "Cumulative Distribution of Estimated Contamination Probabilities", x = "Contamination Probability", y = "Cumulative Density") + 
        theme(legend.position = c(0.9, 0.1))
  ggsave("../figures/transfusion_plots/ecdf_contamination_probability_by_bleeding_indication.png", gg_indication_by_prob_ecdf, width = 8, height = 8, dpi = 600, bg = "white")
  ggsave("../figures/transfusion_plots/ecdf_contamination_probability_by_bleeding_indication.png", gg_indication_by_prob_ecdf, width = 8, height = 8)
  
  gg_indication_by_hg_diff_ecdf <- 
    transfusions_joined |> 
      filter(!blood_order_reason %in% c("Sickle cell disease complications", "Sickle cell/Congenital anemia")) |> 
        mutate(isBleeding = ifelse(blood_order_reason %in% c("Intra-op transfusion", "Active bleeding, Hgb <8 g/dL", "Hemorrhagic shock/Life-threatening bleeding"), "Bleeding", "Non-Bleeding")) |>
        ggplot(aes(hg_diff, color = isBleeding)) +
        geom_vline(xintercept = 0.5, linetype = "dashed", alpha = 0.25) +
        stat_ecdf(linewidth = 1.2) +
        xlim(-4, 4) + 
        scico::scale_color_scico_d(palette = "bilbao", begin = 0.2, end = 0.8) +
        labs(title = "Cumulative Distribution of Hemoglobin Differences", x = "Hemoglobin Change (g/dL)", y = "Cumulative Density") + 
        theme(legend.position = c(0.9, 0.1))
  ggsave("../figures/transfusion_plots/ecdf_hg_diff_by_bleeding_indication.png", gg_indication_by_hg_diff_ecdf, width = 8, height = 8, dpi = 600, bg = "white")
  ggsave("../figures/transfusion_plots/ecdf_hg_diff_by_bleeding_indication.png", gg_indication_by_hg_diff_ecdf, width = 8, height = 8)
  
  return(NULL)
  
}

compareChemistryPredictions <- function(WashU_preds = tar_read(WashU_mix_ratios_WashU)){
  
  bmp_mix_ratios <- read_delim("../data/bmp_mix_ratios.tsv", delim = '\t')
  WashU_preds$bmp_mix_ratio <- bmp_mix_ratios$bmp_mix_ratio
  
  WashU_preds <- 
    WashU_preds |> 
    mutate(color_group = bmp_mix_ratio > 0.001)
  
  group_counts <- 
    WashU_preds |> 
    filter(.pred_1_current_deltas_prior_post_pca_rec_lgb > 0.75 & .pred > 0.1) |>
    group_by(color_group) |> 
    summarise(n = n()) |> 
    drop_na() |>
    mutate(label = paste0("n = ", n, " (", round(n / sum(n) * 100), "%)"))
  
  formulaR2 <- y ~ x 
  formulaSlope <- y ~ x + 0
  library(ggpmisc)
  
  gg_bmp_mix <- 
    WashU_preds |> 
    filter(.pred_1_current_deltas_prior_post_pca_rec_lgb > 0.75 & .pred > 0.1) |>
    ggplot(aes(.pred, bmp_mix_ratio, color = color_group)) + 
      geom_point(alpha = 0.2, size = 2, shape = 19, stroke = 0) + 
      stat_poly_eq(data = WashU_preds |> filter(.pred_1_current_deltas_prior_post_pca_rec_lgb > 0.75 & bmp_mix_ratio > 0.001), use_label(c("r2")), label.x = 0.05, label.y = 0.95, formula = formulaR2) + 
      stat_poly_eq(data = WashU_preds |> filter(.pred_1_current_deltas_prior_post_pca_rec_lgb > 0.75 & bmp_mix_ratio > 0.001), use_label(c("eq")), label.x = 0.05, label.y = 0.9, formula = formulaSlope) + 
      stat_poly_line(data = WashU_preds |> filter(.pred_1_current_deltas_prior_post_pca_rec_lgb > 0.75 & bmp_mix_ratio > 0.001), se = F) + 
      geom_text(data = group_counts |> filter(color_group), aes(label = label), x = 0.1, y = 0.35, hjust = 0, fontface = "bold.italic") + 
      geom_text(data = group_counts |> filter(!color_group), aes(label = label), x = 0.22, y = 0.025, fontface = "bold.italic") + 
      scale_color_manual(values = c("grey65", "darkblue")) +
      scale_x_continuous(name = "CBC Mixture Ratio", limits = c(0.1, 0.5)) + 
      scale_y_continuous(name = "BMP Mixture Ratio", limits = c(0, 0.5)) + 
      labs(title = "Contamination Severity in Paired BMPs From Contaminated CBCs") + 
      theme(legend.position = "none")
  ggsave("../figures/final_figures/bmp_cbc_mixture_ratio_comparison.png", gg_bmp_mix, width = 8, height = 5, dpi = 600, bg = "white")
  ggsave("../figures/final_figures/bmp_cbc_mixture_ratio_comparison.svg", gg_bmp_mix, width = 8, height = 5, dpi = 600, bg = "white")
  
}
